@startuml

'hide circles
'skinparam classAttributeIconSize 0

class AbstractList<T>

class LinkList<T> {
  '-first :Node
  -counter :int
  +add(elem:T)
  addFirst(elem:T)
  get(idx:int) :T
  remove(idx:int)
  size() :int
  iterator():Iterator<T>
  listIterator():ListIterator<T>
}
LinkList ..> Iter : <<create>>
LinkList ..> ListIter : <<create>>
AbstractList <|-- LinkList

interface Iterator<T>
interface ListIterator<T>

class Iter<T> {
   '+hasNext():boolean
   '+next():int
}

class ListIter<T> {
    idx :int
    dir :int
}

class Node<T> {
  ~elem :T
  '~next :Node
}

Node <- Iter : -cur
Node -> Node : ~next
Node -> Node : -prev
'LinkList ..> IntIterator
LinkList +- Node : "  "
LinkList -> Node : -first
LinkList -> Node : -last
LinkList +-- Iter : "   "
LinkList +-- ListIter

Iter .|> Iterator : "      "
Iterator <|-- ListIterator
ListIter .|> ListIterator : "      "
Iter <|-- ListIter

@enduml